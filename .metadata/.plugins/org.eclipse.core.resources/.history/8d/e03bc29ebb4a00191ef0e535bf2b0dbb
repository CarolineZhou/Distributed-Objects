import java.lang.reflect.Field;
import java.lang.reflect.Modifier;
import java.util.Scanner;

public class ObjectCreator {
	Scanner input;
	private boolean doneWithObject = false;
	private static Object objects[];
	
	public boolean displayObjectSelections(int currentObjectNumber) {
		int selection = 0;
		input = new Scanner(System.in);
		Object object;
		Class classObject;
		
		
		while(doneWithObject != true){
			if(currentObjectNumber != 1){
				System.out.println("Would you like to create another object?");
			}
			System.out.println("OBJECT #" + currentObjectNumber);
			System.out.print(
					"Please choose an object\n" +
					"1) Library Object\n" +
					"2) Book Object\n" +
					"3) Owner Object\n" +
					"Enter the number here please : ");
				selection = input.nextInt();
				System.out.println(selection);
				input.nextLine(); // to stop input skipping
				if(selection == 1)
				{
					object = new Library();
					classObject = object.getClass();
					fieldsSelections(object);
					currentObjectNumber++;
				}else if(selection == 2) {
					object = new Book();
					classObject = object.getClass();
					fieldsSelections(object);
					currentObjectNumber++;
				}else if(selection == 3) {
					object = new Owner();
					classObject = object.getClass();
					fieldsSelections(object);
					currentObjectNumber++;
				}else {
					doneWithObject = true;
				}
				
		}
		input.close();
		
		return doneWithObject;
	}

	private void fieldsSelections(Object object) {
		String changeFieldValueString;
		boolean more = true;
		
		while(more == true)
		{
			System.out.println("########################################");
			System.out.println("Would you like to change any of the object's field value?"
								+ "Enter \"YES\" OR \"NO\" please!");
			changeFieldValueString = input.nextLine();
			if(changeFieldValueString.equals("YES")){
				Field chosen = fieldOptions(object);
				if(chosen != null)
				{
					changeField(chosen);
				}
			}else if(changeFieldValueString.equals("NO")){
				more = false;
			}else {
				System.out.println("Please enter all upper case letter for \"YES\" OR \"NO\" please!");
				more = true;
			}
		}
	}
	
	
	private Field fieldOptions(Object object)
	{
		Field fieldArray[] = object.getClass().getDeclaredFields(); 
		Field chosen = null;
		int selection = -1 ;
		
		System.out.println("Please choose a field from below");
		for(int i = 0; i < fieldArray.length; i++)
		{
			System.out.println( i+1 + ") " + fieldArray[i].getName() + "\n");
		}
		
		while(selection == -1)
		{
			System.out.print("Enter the number here please : ");
			if(input.hasNextLine())
			{
				selection = input.nextInt();
				input.nextLine();
				chosen = fieldArray[selection-1];
			}
		}
		return chosen;
	}
	
	
	private void changeField(Field chosen)
	{
		String changeTo = null;
		int valueEntered = 0;
		
		System.out.println("You choose " + chosen.getName() 
		+ "\nType: " + chosen.getType() 
		+ "\nModifier: " + Modifier.toString(chosen.getModifiers()));
		while(valueEntered == 0)
		{
			System.out.print("Enter new value: ");
			if(input.hasNextLine()){
				changeTo = input.nextLine();
				
				//check the kind of input
				if(chosen.getType().isPrimitive()){
					valueEntered = 1;
					System.out.println("It's a interger class field");
					try {
						chosen.setAccessible(true);
						chosen.setInt(object, Integer.parseInt(changeTo));
						System.out.println("Integer value renewed");
					} catch (NumberFormatException e) {
						System.out.println("Number Format error");
						valueEntered = 0;
					} catch (IllegalArgumentException e) {
						System.out.println("Illegal Argument error");
						valueEntered = 0;
					} catch (IllegalAccessException e) {
						System.out.println("Illegal Access error");
						valueEntered = 0;
					}
				}else if(chosen.getType().isArray()){
					System.out.println("array field");
					//if primitive, ask for index
					
					//if object ask for index
					
				}else{
					System.out.println("object field");
					
					
				}
			}
		}
	}

	
	
}
