import java.lang.reflect.Field;
import java.lang.reflect.Modifier;
import java.util.Scanner;

public class ObjectCreator {
	private Object object;
	private Class classObject;
	private int currentObjectNumber;
	
	public boolean displayObjectSelections(int currentObjectNumber) {
		int selection = 0;
		boolean doneWithObject = false;
		this.currentObjectNumber = currentObjectNumber;
		Scanner input = new Scanner(System.in);
		
		while(doneWithObject != true){
			System.out.println("OBJECT #" + currentObjectNumber);
			if(currentObjectNumber != 1){
				System.out.println("Would you like to create another object?");
			}
			System.out.print(
					"Please choose an object\n" +
					"1) Library Object\n" +
					"2) Book Object\n" +
					"3) Owner Object\n" +
					"Enter the number here please : ");
				selection = input.nextInt();
				System.out.println(selection);
				//input.nextLine(); // to stop input skipping
				if(selection == 1)
				{
					object = new Library();
					classObject = object.getClass();
					doneWithObject = fieldsSelections();
				}else if(selection == 2) {
					object = new Book();
					classObject = object.getClass();
					doneWithObject = fieldsSelections();
				}else if(selection == 3) {
					object = new Owner();
					classObject = object.getClass();
					doneWithObject = fieldsSelections();
				}else {
					doneWithObject = false;
				}
				
		}
		
		return doneWithObject;
	}


	private boolean fieldsSelections() {
		boolean doneWithFields = false;
		String changeFieldValueString;
		Scanner change = new Scanner(System.in);
		
		System.out.println("########################################");
		System.out.println("Would you like to change any of the object's field value?"
							+ "Enter \"YES\" OR \"NO\" please!");
		changeFieldValueString = change.nextLine();
		if(changeFieldValueString.equals("YES")){
			fieldOptions();
		}else if(changeFieldValueString.equals("NO")){
			doneWithFields = true;
		}else {
			System.out.println("Please enter all upper case letter for \"YES\" OR \"NO\" please!");
		}

		change.close();
		
		return doneWithFields;
	}
	
	private void fieldOptions()
	{
		Field fieldArray[] = classObject.getDeclaredFields(); 
		Field chosen;
		int selection;
		
		System.out.println("Please choose a field from below");
		for(int i = 0; i < fieldArray.length; i++)
		{
			System.out.println( i+1 + ") " + fieldArray[i].getName() + "\n");
		}
		
		System.out.print("Enter the number here please : ");
		Scanner fieldInput = new Scanner(System.in);
		selection = fieldInput.nextInt();
		chosen = fieldArray[selection-1];
		fieldInput.close();
		
		changeField(chosen);
		
		
	}
	
	private void changeField(Field chosen)
	{
		String changeTo = null;
		
		Scanner newValueScan = new Scanner(System.in);
		System.out.print("You choose " + chosen.getName() 
							+ "\nType: " + chosen.getType() 
							+ "\nModifier: " + Modifier.toString(chosen.getModifiers())
							+ "\n Enter new value here: \n1 ");
		changeTo = newValueScan.nextLine();
		newValueScan.close();
		if(chosen.getType().isArray())
		{
			
		}else if(chosen.getType().isPrimitive())
		{
			System.out.println("Value is primitive");
			if(chosen.getType() == Integer.class)
			{
				try {
					chosen.setInt(object, Integer.parseInt(changeTo));
				} catch (NumberFormatException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (IllegalArgumentException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (IllegalAccessException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		}else {
			//object
		}
	}
	
	
	
	

}
