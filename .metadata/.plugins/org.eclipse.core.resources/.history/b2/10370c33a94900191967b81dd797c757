package mypackage;
import java.util.Enumeration;
import java.util.Vector;

public class Customer extends DomainObject
    {
	 public double totalAmount;
     public int frequentRenterPoints = 0;
	public Customer(String name) {
        set_name(name);
    }
    public String statement() {
        String header = "Rental Record for " + name() + "\n";

        String result = getAmountOwed(header);
        //add footer lines
        result +=  "Amount owed is " + String.valueOf(totalAmount) + "\n";
        result += "You earned " + String.valueOf(frequentRenterPoints) + " frequent renter points";
        return result;

    }
	private String getAmountOwed(String result) {
		totalAmount=0;
        Enumeration<Rental> rentals = _rentals.elements();
		while (rentals.hasMoreElements()) {
            double thisAmount = 0;
            Rental each = (Rental) rentals.nextElement();

            //determine amounts for each line
            switch (each.tape().movie().priceCode()) {
                case Movie.REGULAR:
                    thisAmount += 2;
                    if (each.daysRented() > 2)
                        thisAmount += (each.daysRented() - 2) * 1.5;
                    break;
                case Movie.NEW_RELEASE:
                    thisAmount += each.daysRented() * 3;
                    break;
                case Movie.CHILDRENS:
                    thisAmount += 1.5;
                    if (each.daysRented() > 3)
                        thisAmount += (each.daysRented() - 3) * 1.5;
                    break;

            }
            totalAmount += thisAmount;
            updateFreqPoints(each);					//added method
            //show figures for this rental
            result += "\t" + each.tape().movie().name()+ "\t" + String.valueOf(thisAmount) + "\n";
		}
		return result;
	}
	private void updateFreqPoints(Rental each) {
		 // add frequent renter points
        frequentRenterPoints ++;
        // add bonus for a two day new release rental
        if ((each.tape().movie().priceCode() == Movie.NEW_RELEASE) && each.daysRented() > 1) frequentRenterPoints ++;
		
	}
	public void addRental(Rental arg) {
    	_rentals.addElement(arg);
    }
    public static Customer get(String name) {
    	return (Customer) Registrar.get("Customers", name);
    }
    public void persist() {
    	Registrar.add("Customers", this);
    }
    public String get_name() {
		return _name;
	}
	public void set_name(String _name) {
		this._name = _name;
	}

	private Vector<Rental> _rentals = new Vector<Rental>();
    }