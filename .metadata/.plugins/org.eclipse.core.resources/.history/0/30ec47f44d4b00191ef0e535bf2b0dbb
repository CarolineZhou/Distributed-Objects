import org.jdom2.*;
import org.jdom2.output.XMLOutputter;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.lang.reflect.Field;


public class Serializer {
	
	// SERIALIZE object passed in, and produce an XML
	public Document serialize(Object objectCreator)
	{
		Element root = new Element("Desesialized");
		
		//Create root element first
		for(int i = 0; i < ObjectCreator.objects.length; i++)
		{
			if(ObjectCreator.objects[i] == null) break;
			this.accessClass(ObjectCreator.objects[i], root);
		}
		//then create object one by one
		
		
		DocType type = new DocType("Deserialized");
		Document doc = new Document(root, type);

		// serialize with two space indents and extra line breaks
		try {
			XMLOutputter serializerr = new XMLOutputter();
			serializerr.output(doc, System.out);				 //or use System.out
			serializerr.output(doc, Main.fos);				 
		}
		catch (IOException e) {
			System.err.println(e);
		}
		return null;
	}
	
	private void accessClass(Object obj, Element root)
	{
		Class currentClass;
		Object currentObject;
		Element currentRoot;
		Element elementHolder = null;
		
		currentClass = obj.getClass();
		currentRoot = root;
		currentObject = obj;
		
		this.serializeClass(currentClass, currentObject, currentRoot, elementHolder);
		
		
	}

	private void serializeClass(Class currentClass, Object currentObject, Element currentRoot, Element elementHolder) 
	{
		elementHolder = new Element("object");
		
		int id = currentObject.hashCode();
		elementHolder.setAttribute("ID", String.valueOf(id) );
		elementHolder.setAttribute("Class", currentClass.getName());
		
		if(currentClass.getDeclaredFields().length > 0)
		{
			this.serializeFields(currentClass, currentObject, currentRoot,elementHolder);
		}
		currentRoot.addContent(elementHolder);
	}
	
	private void serializeFields(Class currentClass, Object currentObject, Element currentRoot, Element elementHolder)
	{
		Field[] fields = currentClass.getFields();
		Element fieldHolder = new Element("field")
		elementHolder = 
		for(Field f : fields) {
			f.setAccessible(true);
			
			Element element = new Element(f.getName());
			
			//element.setAttribute("")
		}
	}
}
